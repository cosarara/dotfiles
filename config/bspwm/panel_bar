#! /bin/bash
#
# vim: set ts=4 sw=4:

. panel_colors

num_mon=$(bspc query -M | wc -l)
mon_n=$1

clock_icon="%{T2}Õ%{T1}"
music_icon="%{T2}Î%{T1}"

while read -r line ; do
	case $line in
		S*)
			# clock output
			sys="%{F$COLOR_SYS_FG}%{B$COLOR_SYS_BG} ${clock_icon} ${line#?} %{B-}%{F-}"
			;;
		T*)
			# xtitle output
			title="%{F$COLOR_TITLE_FG}%{B$COLOR_TITLE_BG} ${line#?} %{B-}%{F-}"
			;;
		BAT*)
			# battery info
			perc=$(echo ${line#????} | cut -d' ' -f1)
			stat=$(echo ${line#????} | cut -d" " -f2)
			info=" BAT ${perc}% "
			if [[ "$stat" == "Discharging" ]]; then
				bat="%{F$COLOR_URGENT_FG}${info}%{F-}"
			else
				#bat="%{F$COLOR_BATT_FG} ${perc}% ⚡ %{F-}"
				bat="%{F$COLOR_BATT_FG}${info}%{F-}"
			fi
			;;
		MPD*)
			music="%{F$COLOR_MUSIC_FG}%{B$COLOR_MUSIC_BG} "
			music+="%{A:bash -c 'if mpc | grep playing; then mpc pause; else mpc play; fi':}"
			music+="%{A5:mpc volume -5:}%{A4:mpc volume +5:}${music_icon} "
			music+="${line#???}%{A}%{A}%{A} %{B-}%{F-}"
			if [[ -z ${line#???} ]]; then # mpd not running
				music=""
			fi
			;;
		W*)
			# bspwm's state
			monitor=0
			declare -a wms
			wm=""
			IFS=':'
			set -- ${line#?}
			while [ $# -gt 0 ] ; do
				item=$1
				name=${item#?}
				case $item in
					[mM]*)
						[ $num_mon -lt 2 ] && shift && continue
						case $item in
							m*)
								# monitor
								FG=$COLOR_MONITOR_FG
								BG=$COLOR_MONITOR_BG
								;;
							M*)
								# focused monitor
								FG=$COLOR_FOCUSED_MONITOR_FG
								BG=$COLOR_FOCUSED_MONITOR_BG
								;;
						esac
						if [ -n "$wm" ]; then
							wms[$monitor]=$wm
							((monitor++))
						fi
						#wm="%{F${FG}}%{B${BG}}%{A:bspc monitor -f ${name}:} ${name} %{A}%{B-}%{F-}"
						wm=""
						desktop_n=1
						;;
					[fFoOuU]*)
						case $item in
							f*)
								# free desktop
								FG=$COLOR_FREE_FG
								BG=$COLOR_FREE_BG
								;;
							F*)
								# focused free desktop
								FG=$COLOR_FOCUSED_FREE_FG
								BG=$COLOR_FOCUSED_FREE_BG
								;;
							o*)
								# occupied desktop
								FG=$COLOR_OCCUPIED_FG
								BG=$COLOR_OCCUPIED_BG
								;;
							O*)
								# focused occupied desktop
								FG=$COLOR_FOCUSED_OCCUPIED_FG
								BG=$COLOR_FOCUSED_OCCUPIED_BG
								;;
							u*)
								# urgent desktop
								FG=$COLOR_URGENT_FG
								BG=$COLOR_URGENT_BG
								;;
							U*)
								# focused urgent desktop
								FG=$COLOR_FOCUSED_URGENT_FG
								BG=$COLOR_FOCUSED_URGENT_BG
								;;
						esac
						#wm="${wm}%{F${FG}}%{B${BG}}%{A:bspc desktop -f ${name}:} ${name} %{A}%{B-}%{F-}"
						monitor_1=$((monitor+1))
						wm="${wm}%{F${FG}}%{B${BG}}%{A:bspc desktop -f \"^${monitor_1}\\:^${desktop_n}\":} ${name} %{A}%{B-}%{F-}"
						((desktop_n++))
						;;
					[LTG]*)
						# layout, state and flags
						#wm="${wm}%{F$COLOR_STATE_FG}%{B$COLOR_STATE_BG} ${name} %{B-}%{F-}"
						;;
				esac
				shift
			done
			wms[$monitor]=$wm
			;;
	esac
	#for monitor in "$wms"; do
	#	printf "%s" "%{l}${monitor}%{c}${title}%{r}${sys}%{S+}%{l}"
	#done
	#printf "\n"
	spacing="           " # leave space for tray
	printf "%s\n" "%{l}${wms[${mon_n}]}%{c}${title}%{r}${bat}${music}${spacing}${sys}"
	#printf "%s\n" "%{l}${wm}%{c}${title}%{r}${sys}"
done
